#\documentstyle{article}
#\begin{document}
#%
#%         ***********************************************
#%         *                                             *
#          \title{The epsc compiler makefile}
#%         *                                             *
#%         ***********************************************
#%
#\author{B\o rge Arntsen}
#\maketitle
#\tableofcontents
#\abstract{Makefile for the epsc compiler}
#%============================================================
#\section{Introduction}  
#%============================================================
#The targets are {\tt epsc}, {\tt install} and 
#{\tt clean}. Default is {\tt epsc}.
#Installation is as follows:
#\begin{enumerate}
#\item Type make -r boot
#\item Type make -r
#\item Type Make -r
#\item Type Make -r
#\end{enumerate}
#%============================================================
#\section{Definitions}
#%============================================================
#This section defines pathnames for the directories where
#the compiler driver (ec), compiler binary (eps), library 
#(libe.a) and include file
#(libe.i) are to be installed. These must be changed to your
#local conventions.   
#\begin{verbatim}
#
#-- Default case is the current directory
#
#BIN=.
#LIB=.
#INC=.
#ECFLAGS=-g
#ECFLAGS=
CCFLAGS=
#LDFLAGS=
#
#-- My local definitions
#
BIN=../Bin
LIB=../Lib
INC=../Inc
#\end{verbatim}
#%============================================================
#\section{The epsc target}
#%============================================================
#\begin{verbatim}
epsc:	main.o scan.o parse.o ptree.o sem.o sym.o code-cuda.o \
	err.o scanpath.o libe.o runcudac.o  	
	nvcc $(LDFLAGS) -o epsc main.o scan.o parse.o ptree.o sem.o code-cuda.o \
			  sym.o err.o scanpath.o libe.o runcudac.o

main.o:		main.e 
			./ecc $(ECFLAGS) main.e 
scan.o:		scan.e
			./ecc $(ECFLAGS) scan.e 
scanpath.o:	scanpath.e
			./ecc $(ECFLAGS) scanpath.e 
parse.o:	parse.e
			./ecc $(ECFLAGS) parse.e 
ptree.o:	ptree.e
			./ecc $(ECFLAGS) ptree.e 
sem.o:		sem.e
			./ecc $(ECFLAGS) sem.e 
sym.o:		sym.e
			./ecc $(ECFLAGS) sym.e 
code-cuda.o:	code-cuda.e
			./ecc $(ECFLAGS) code-cuda.e 
err.o:		err.e
			./ecc $(ECFLAGS) err.e 
#\end{verbatim}
#=====================================================
# \section{Libraries}
#=====================================================
#\begin{verbatim}
lib:		libecuda.a
libecuda.a:	libe.o runcuda.o	
		ar rcs libecuda.a libe.o runcuda.o 

libe.o:		libe.e
			./ecc $(ECFLAGS) libe.e 
runcuda.o:	runcuda.e
			cp runcuda.e runcuda.cpp
			nvcc -c -x cu $(CCFLAGS) runcuda.cpp
runcudac.o:	runcudac.e
			cp runcudac.e runcudac.cpp
			nvcc -c $(CCFLAGS) runcudac.cpp
#\end{verbatim}
#%============================================================
#\section{The install target}
#%============================================================
#\begin{verbatim}
install: epsc libecuda.a
	cp epsc $(BIN)
	cp ecc-install  $(BIN)/ecc
	cp elc-install  $(BIN)/elc
	cp libecuda.a $(LIB)
	cp libe.i $(INC)
#\end{verbatim}
#%============================================================
#\section{The boot target}
#%============================================================
#\begin{verbatim}
boot: 
	cp ../Arch/Boot-cuda/*.cp .
	nvcc -c *.cpp
	nvcc -o epsc *.o
#\end{verbatim}
#%============================================================
#\section{The genboot target}
#%============================================================
#\begin{verbatim}
genboot:	main.cpp scan.cpp scanpath.cpp parse.cpp ptree.cpp sem.cpp sym.cpp code-cuda.cpp    \
		err.cpp libe.cpp runcudac.cpp scanpath.cpp makefile m.i run.i	
		cp main.cpp scan.cpp scanpath.cpp parse.cpp ptree.cpp sem.cpp sym.cpp code-cuda.cpp \
       		err.cpp libe.cpp runcudac.cpp m.i run.i ../Arch/Boot-cuda

main.cpp:		main.e 
			./ecc -c main.e
scan.cpp:		scan.e
			./ecc -c scan.e 
scanpath.cpp:		scanpath.e
			./ecc -c scanpath.e 
parse.cpp:			parse.e
			./ecc -c parse.e 
ptree.cpp:			ptree.e
			./ecc -c ptree.e 
sem.cpp:			sem.e
			./ecc -c sem.e 
sym.cpp: 			sym.e
			./ecc -c sym.e 
code-cuda.cpp:		code-cuda.e
			./ecc -c code-cuda.e 
err.cpp:			err.e
			./ecc -c err.e 
libe.cpp:		libe.e
			./ecc -c libe.e 
runcudac.cpp:		runcudac.e
			cp runcudac.e runcuadc.cpp
#\end{verbatim}
#%============================================================
#\section{The clean target}
#%============================================================
#\begin{verbatim}
clean: 
	rm -f *.o *.cpp *.a 
#\end{verbatim}
#\end{document}
#*/
